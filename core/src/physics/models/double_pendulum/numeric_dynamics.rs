use crate::utils::matrix::vec_to_dmat;
use nalgebra::DMatrix;

pub fn eval_dfdx(params: &[f64]) -> DMatrix<f64> {
    let mut v: Vec<Vec<f64>> = vec![vec![0.0; 4]; 4];
    let t0 = 0.00000000000000000e0;
    v[0][0] = t0;
    let t1 = 1.00000000000000000e0;
    v[0][1] = t1;
    let t2 = 0.00000000000000000e0;
    v[0][2] = t2;
    let t3 = 0.00000000000000000e0;
    v[0][3] = t3;
    let t4 = params[1];
    let t5 = params[2];
    let t6 = params[0];
    let t7 = -t5;
    let t8 = t6 + t7;
    let t9 = t8.sin();
    let t10 = t4.powf(2.00000000000000000e0);
    let t11 = t9.powf(2.00000000000000000e0);
    let t12 = params[1];
    let t13 = params[2];
    let t14 = params[0];
    let t15 = -t13;
    let t16 = t14 + t15;
    let t17 = t12.powf(2.00000000000000000e0);
    let t18 = t16.cos();
    let t19 = params[3];
    let t20 = t17 * t18;
    let t21 = t19.powf(2.00000000000000000e0);
    let t22 = params[2];
    let t23 = params[0];
    let t24 = -t22;
    let t25 = t23 + t24;
    let t26 = t20 + t21;
    let t27 = t25.cos();
    let t28 = t26 * t27;
    let t29 = params[2];
    let t30 = params[2];
    let t31 = params[0];
    let t32 = -t30;
    let t33 = t31 + t32;
    let t34 = t29.sin();
    let t35 = t33.sin();
    let t36 = t34 * t35;
    let t37 = t36 * 9.81000000000000050e0;
    let t38 = params[0];
    let t39 = t38.cos();
    let t40 = t39 * 1.96200000000000010e1;
    let t41 = t10 * t11;
    let t42 = -t28;
    let t43 = t41 + t42;
    let t44 = -t37;
    let t45 = t43 + t44;
    let t46 = -t40;
    let t47 = params[2];
    let t48 = params[0];
    let t49 = -t47;
    let t50 = t48 + t49;
    let t51 = t50.sin();
    let t52 = t51.powf(2.00000000000000000e0);
    let t53 = t52 + 1.00000000000000000e0;
    let t54 = t45 + t46;
    let t55 = 1.0 / t53;
    let t56 = params[1];
    let t57 = -t56;
    let t58 = params[1];
    let t59 = t58.powf(2.00000000000000000e0);
    let t60 = t59 + 1.00000000000000004e-10;
    let t61 = t60.powf(5.00000000000000000e-1);
    let t62 = t57.powf(3.00000000000000000e0);
    let t63 = 1.0 / t61;
    let t64 = params[1];
    let t65 = params[2];
    let t66 = params[0];
    let t67 = -t65;
    let t68 = t66 + t67;
    let t69 = t64.powf(2.00000000000000000e0);
    let t70 = t68.cos();
    let t71 = params[3];
    let t72 = t69 * t70;
    let t73 = t71.powf(2.00000000000000000e0);
    let t74 = params[2];
    let t75 = params[0];
    let t76 = -t74;
    let t77 = t75 + t76;
    let t78 = t72 + t73;
    let t79 = t77.sin();
    let t80 = t78 * t79;
    let t81 = params[0];
    let t82 = t81.sin();
    let t83 = t82 * 1.96200000000000010e1;
    let t84 = params[2];
    let t85 = params[2];
    let t86 = params[0];
    let t87 = -t85;
    let t88 = t86 + t87;
    let t89 = t84.sin();
    let t90 = t88.cos();
    let t91 = t89 * t90;
    let t92 = t62 * t63;
    let t93 = -t83;
    let t94 = t92 + t93;
    let t95 = -t80;
    let t96 = t94 + t95;
    let t97 = params[4];
    let t98 = t96 + t97;
    let t99 = t91 * 9.81000000000000050e0;
    let t100 = params[2];
    let t101 = params[0];
    let t102 = -t100;
    let t103 = t101 + t102;
    let t104 = params[2];
    let t105 = params[0];
    let t106 = -t104;
    let t107 = t105 + t106;
    let t108 = params[2];
    let t109 = params[0];
    let t110 = -t108;
    let t111 = t109 + t110;
    let t112 = t111.sin();
    let t113 = t112.powf(2.00000000000000000e0);
    let t114 = t113 + 1.00000000000000000e0;
    let t115 = t114.powf(2.00000000000000000e0);
    let t116 = t98 + t99;
    let t117 = t103.sin();
    let t118 = t116 * t117;
    let t119 = 1.0 / t115;
    let t120 = t118 * t119;
    let t121 = t107.cos();
    let t122 = t120 * t121;
    let t123 = t122 * 2.00000000000000000e0;
    let t124 = t54 * t55;
    let t125 = -t123;
    let t126 = t124 + t125;
    v[1][0] = t126;
    let t127 = params[1];
    let t128 = params[1];
    let t129 = t128.powf(2.00000000000000000e0);
    let t130 = t129 + 1.00000000000000004e-10;
    let t131 = t130.powf(1.50000000000000000e0);
    let t132 = 1.0 / t131;
    let t133 = t127.powf(4.00000000000000000e0);
    let t134 = params[1];
    let t135 = params[1];
    let t136 = t135.powf(2.00000000000000000e0);
    let t137 = t136 + 1.00000000000000004e-10;
    let t138 = t137.powf(5.00000000000000000e-1);
    let t139 = 1.0 / t138;
    let t140 = t134.powf(2.00000000000000000e0);
    let t141 = t139 * t140;
    let t142 = t141 * 3.00000000000000000e0;
    let t143 = params[2];
    let t144 = params[0];
    let t145 = -t143;
    let t146 = t144 + t145;
    let t147 = params[2];
    let t148 = params[0];
    let t149 = -t147;
    let t150 = t148 + t149;
    let t151 = params[1];
    let t152 = t146.sin();
    let t153 = t151 * t152;
    let t154 = t150.cos();
    let t155 = t153 * t154;
    let t156 = t155 * 2.00000000000000000e0;
    let t157 = t132 * t133;
    let t158 = -t142;
    let t159 = t157 + t158;
    let t160 = -t156;
    let t161 = params[2];
    let t162 = params[0];
    let t163 = -t161;
    let t164 = t162 + t163;
    let t165 = t164.sin();
    let t166 = t165.powf(2.00000000000000000e0);
    let t167 = t166 + 1.00000000000000000e0;
    let t168 = t159 + t160;
    let t169 = 1.0 / t167;
    let t170 = t168 * t169;
    v[1][1] = t170;
    let t171 = params[1];
    let t172 = -t171;
    let t173 = params[2];
    let t174 = params[0];
    let t175 = -t173;
    let t176 = t174 + t175;
    let t177 = t176.sin();
    let t178 = t172.powf(2.00000000000000000e0);
    let t179 = t177.powf(2.00000000000000000e0);
    let t180 = params[1];
    let t181 = params[2];
    let t182 = params[0];
    let t183 = -t181;
    let t184 = t182 + t183;
    let t185 = t180.powf(2.00000000000000000e0);
    let t186 = t184.cos();
    let t187 = params[3];
    let t188 = t185 * t186;
    let t189 = t187.powf(2.00000000000000000e0);
    let t190 = params[2];
    let t191 = params[0];
    let t192 = -t190;
    let t193 = t191 + t192;
    let t194 = t188 + t189;
    let t195 = t193.cos();
    let t196 = params[2];
    let t197 = params[2];
    let t198 = params[0];
    let t199 = -t197;
    let t200 = t198 + t199;
    let t201 = t196.sin();
    let t202 = t200.sin();
    let t203 = t201 * t202;
    let t204 = params[2];
    let t205 = params[2];
    let t206 = params[0];
    let t207 = -t205;
    let t208 = t206 + t207;
    let t209 = t204.cos();
    let t210 = t208.cos();
    let t211 = t209 * t210;
    let t212 = t178 * t179;
    let t213 = t194 * t195;
    let t214 = t212 + t213;
    let t215 = t203 * 9.81000000000000050e0;
    let t216 = t214 + t215;
    let t217 = t211 * 9.81000000000000050e0;
    let t218 = params[2];
    let t219 = params[0];
    let t220 = -t218;
    let t221 = t219 + t220;
    let t222 = t221.sin();
    let t223 = t222.powf(2.00000000000000000e0);
    let t224 = t223 + 1.00000000000000000e0;
    let t225 = t216 + t217;
    let t226 = 1.0 / t224;
    let t227 = params[1];
    let t228 = -t227;
    let t229 = params[1];
    let t230 = t229.powf(2.00000000000000000e0);
    let t231 = t230 + 1.00000000000000004e-10;
    let t232 = t231.powf(5.00000000000000000e-1);
    let t233 = t228.powf(3.00000000000000000e0);
    let t234 = 1.0 / t232;
    let t235 = params[1];
    let t236 = params[2];
    let t237 = params[0];
    let t238 = -t236;
    let t239 = t237 + t238;
    let t240 = t235.powf(2.00000000000000000e0);
    let t241 = t239.cos();
    let t242 = params[3];
    let t243 = t240 * t241;
    let t244 = t242.powf(2.00000000000000000e0);
    let t245 = params[2];
    let t246 = params[0];
    let t247 = -t245;
    let t248 = t246 + t247;
    let t249 = t243 + t244;
    let t250 = t248.sin();
    let t251 = t249 * t250;
    let t252 = params[0];
    let t253 = t252.sin();
    let t254 = t253 * 1.96200000000000010e1;
    let t255 = params[2];
    let t256 = params[2];
    let t257 = params[0];
    let t258 = -t256;
    let t259 = t257 + t258;
    let t260 = t255.sin();
    let t261 = t259.cos();
    let t262 = t260 * t261;
    let t263 = t233 * t234;
    let t264 = -t254;
    let t265 = t263 + t264;
    let t266 = -t251;
    let t267 = t265 + t266;
    let t268 = params[4];
    let t269 = t267 + t268;
    let t270 = t262 * 9.81000000000000050e0;
    let t271 = params[2];
    let t272 = params[0];
    let t273 = -t271;
    let t274 = t272 + t273;
    let t275 = params[2];
    let t276 = params[0];
    let t277 = -t275;
    let t278 = t276 + t277;
    let t279 = params[2];
    let t280 = params[0];
    let t281 = -t279;
    let t282 = t280 + t281;
    let t283 = t282.sin();
    let t284 = t283.powf(2.00000000000000000e0);
    let t285 = t284 + 1.00000000000000000e0;
    let t286 = t285.powf(2.00000000000000000e0);
    let t287 = t269 + t270;
    let t288 = t274.sin();
    let t289 = t287 * t288;
    let t290 = 1.0 / t286;
    let t291 = t289 * t290;
    let t292 = t278.cos();
    let t293 = t291 * t292;
    let t294 = t225 * t226;
    let t295 = t293 * 2.00000000000000000e0;
    let t296 = t294 + t295;
    v[1][2] = t296;
    let t297 = params[2];
    let t298 = params[0];
    let t299 = -t297;
    let t300 = t298 + t299;
    let t301 = params[2];
    let t302 = params[0];
    let t303 = -t301;
    let t304 = t302 + t303;
    let t305 = t304.sin();
    let t306 = t305.powf(2.00000000000000000e0);
    let t307 = t306 + 1.00000000000000000e0;
    let t308 = params[3];
    let t309 = 1.0 / t307;
    let t310 = t308 * t309;
    let t311 = t300.sin();
    let t312 = t310 * t311;
    let t313 = t312 * -2.00000000000000000e0;
    v[1][3] = t313;
    let t314 = 0.00000000000000000e0;
    v[2][0] = t314;
    let t315 = 0.00000000000000000e0;
    v[2][1] = t315;
    let t316 = 0.00000000000000000e0;
    v[2][2] = t316;
    let t317 = 1.00000000000000000e0;
    v[2][3] = t317;
    let t318 = params[1];
    let t319 = params[2];
    let t320 = params[0];
    let t321 = -t319;
    let t322 = t320 + t321;
    let t323 = t318.powf(2.00000000000000000e0);
    let t324 = t322.cos();
    let t325 = t323 * t324;
    let t326 = params[3];
    let t327 = params[2];
    let t328 = params[0];
    let t329 = -t327;
    let t330 = t328 + t329;
    let t331 = t330.sin();
    let t332 = t326.powf(2.00000000000000000e0);
    let t333 = t331.powf(2.00000000000000000e0);
    let t334 = t332 * t333;
    let t335 = params[3];
    let t336 = params[2];
    let t337 = params[0];
    let t338 = -t336;
    let t339 = t337 + t338;
    let t340 = t339.cos();
    let t341 = t335.powf(2.00000000000000000e0);
    let t342 = t340.powf(2.00000000000000000e0);
    let t343 = params[0];
    let t344 = params[2];
    let t345 = params[0];
    let t346 = -t344;
    let t347 = t345 + t346;
    let t348 = t343.sin();
    let t349 = t347.sin();
    let t350 = t348 * t349;
    let t351 = t350 * 1.96200000000000010e1;
    let t352 = params[0];
    let t353 = params[2];
    let t354 = params[0];
    let t355 = -t353;
    let t356 = t354 + t355;
    let t357 = t352.cos();
    let t358 = t356.cos();
    let t359 = t357 * t358;
    let t360 = -t334;
    let t361 = t325 * 2.00000000000000000e0;
    let t362 = t360 + t361;
    let t363 = -t351;
    let t364 = t362 + t363;
    let t365 = t341 * t342;
    let t366 = t364 + t365;
    let t367 = t359 * 1.96200000000000010e1;
    let t368 = params[2];
    let t369 = params[0];
    let t370 = -t368;
    let t371 = t369 + t370;
    let t372 = t371.sin();
    let t373 = t372.powf(2.00000000000000000e0);
    let t374 = t373 + 1.00000000000000000e0;
    let t375 = t366 + t367;
    let t376 = 1.0 / t374;
    let t377 = params[1];
    let t378 = params[2];
    let t379 = params[0];
    let t380 = -t378;
    let t381 = t379 + t380;
    let t382 = t377.powf(2.00000000000000000e0);
    let t383 = t381.sin();
    let t384 = t382 * t383;
    let t385 = params[3];
    let t386 = params[3];
    let t387 = t386.powf(2.00000000000000000e0);
    let t388 = t387 + 1.00000000000000004e-10;
    let t389 = t388.powf(5.00000000000000000e-1);
    let t390 = t385.powf(3.00000000000000000e0);
    let t391 = 1.0 / t389;
    let t392 = t390 * t391;
    let t393 = params[3];
    let t394 = params[2];
    let t395 = params[0];
    let t396 = -t394;
    let t397 = t395 + t396;
    let t398 = params[2];
    let t399 = params[0];
    let t400 = -t398;
    let t401 = t399 + t400;
    let t402 = t393.powf(2.00000000000000000e0);
    let t403 = t397.sin();
    let t404 = t402 * t403;
    let t405 = t401.cos();
    let t406 = params[0];
    let t407 = params[2];
    let t408 = params[0];
    let t409 = -t407;
    let t410 = t408 + t409;
    let t411 = t406.sin();
    let t412 = t410.cos();
    let t413 = t411 * t412;
    let t414 = params[2];
    let t415 = t414.sin();
    let t416 = t415 * 1.96200000000000010e1;
    let t417 = -t392;
    let t418 = t384 * 2.00000000000000000e0;
    let t419 = t417 + t418;
    let t420 = t404 * t405;
    let t421 = t419 + t420;
    let t422 = params[5];
    let t423 = t421 + t422;
    let t424 = -t416;
    let t425 = t423 + t424;
    let t426 = t413 * 1.96200000000000010e1;
    let t427 = params[2];
    let t428 = params[0];
    let t429 = -t427;
    let t430 = t428 + t429;
    let t431 = params[2];
    let t432 = params[0];
    let t433 = -t431;
    let t434 = t432 + t433;
    let t435 = params[2];
    let t436 = params[0];
    let t437 = -t435;
    let t438 = t436 + t437;
    let t439 = t438.sin();
    let t440 = t439.powf(2.00000000000000000e0);
    let t441 = t440 + 1.00000000000000000e0;
    let t442 = t441.powf(2.00000000000000000e0);
    let t443 = t425 + t426;
    let t444 = t430.sin();
    let t445 = t443 * t444;
    let t446 = 1.0 / t442;
    let t447 = t445 * t446;
    let t448 = t434.cos();
    let t449 = t447 * t448;
    let t450 = t449 * 2.00000000000000000e0;
    let t451 = t375 * t376;
    let t452 = -t450;
    let t453 = t451 + t452;
    v[3][0] = t453;
    let t454 = params[2];
    let t455 = params[0];
    let t456 = -t454;
    let t457 = t455 + t456;
    let t458 = params[2];
    let t459 = params[0];
    let t460 = -t458;
    let t461 = t459 + t460;
    let t462 = t461.sin();
    let t463 = t462.powf(2.00000000000000000e0);
    let t464 = t463 + 1.00000000000000000e0;
    let t465 = params[1];
    let t466 = 1.0 / t464;
    let t467 = t465 * t466;
    let t468 = t457.sin();
    let t469 = t467 * t468;
    let t470 = t469 * 4.00000000000000000e0;
    v[3][1] = t470;
    let t471 = params[1];
    let t472 = params[2];
    let t473 = params[0];
    let t474 = -t472;
    let t475 = t473 + t474;
    let t476 = t471.powf(2.00000000000000000e0);
    let t477 = t475.cos();
    let t478 = t476 * t477;
    let t479 = params[3];
    let t480 = params[2];
    let t481 = params[0];
    let t482 = -t480;
    let t483 = t481 + t482;
    let t484 = t483.sin();
    let t485 = t479.powf(2.00000000000000000e0);
    let t486 = t484.powf(2.00000000000000000e0);
    let t487 = params[3];
    let t488 = params[2];
    let t489 = params[0];
    let t490 = -t488;
    let t491 = t489 + t490;
    let t492 = t491.cos();
    let t493 = t487.powf(2.00000000000000000e0);
    let t494 = t492.powf(2.00000000000000000e0);
    let t495 = t493 * t494;
    let t496 = params[0];
    let t497 = params[2];
    let t498 = params[0];
    let t499 = -t497;
    let t500 = t498 + t499;
    let t501 = t496.sin();
    let t502 = t500.sin();
    let t503 = t501 * t502;
    let t504 = params[2];
    let t505 = t504.cos();
    let t506 = t505 * 1.96200000000000010e1;
    let t507 = t478 * -2.00000000000000000e0;
    let t508 = -t495;
    let t509 = t507 + t508;
    let t510 = t485 * t486;
    let t511 = t509 + t510;
    let t512 = -t506;
    let t513 = t511 + t512;
    let t514 = t503 * 1.96200000000000010e1;
    let t515 = params[2];
    let t516 = params[0];
    let t517 = -t515;
    let t518 = t516 + t517;
    let t519 = t518.sin();
    let t520 = t519.powf(2.00000000000000000e0);
    let t521 = t520 + 1.00000000000000000e0;
    let t522 = t513 + t514;
    let t523 = 1.0 / t521;
    let t524 = params[1];
    let t525 = params[2];
    let t526 = params[0];
    let t527 = -t525;
    let t528 = t526 + t527;
    let t529 = t524.powf(2.00000000000000000e0);
    let t530 = t528.sin();
    let t531 = t529 * t530;
    let t532 = params[3];
    let t533 = params[3];
    let t534 = t533.powf(2.00000000000000000e0);
    let t535 = t534 + 1.00000000000000004e-10;
    let t536 = t535.powf(5.00000000000000000e-1);
    let t537 = t532.powf(3.00000000000000000e0);
    let t538 = 1.0 / t536;
    let t539 = t537 * t538;
    let t540 = params[3];
    let t541 = params[2];
    let t542 = params[0];
    let t543 = -t541;
    let t544 = t542 + t543;
    let t545 = params[2];
    let t546 = params[0];
    let t547 = -t545;
    let t548 = t546 + t547;
    let t549 = t540.powf(2.00000000000000000e0);
    let t550 = t544.sin();
    let t551 = t549 * t550;
    let t552 = t548.cos();
    let t553 = params[0];
    let t554 = params[2];
    let t555 = params[0];
    let t556 = -t554;
    let t557 = t555 + t556;
    let t558 = t553.sin();
    let t559 = t557.cos();
    let t560 = t558 * t559;
    let t561 = params[2];
    let t562 = t561.sin();
    let t563 = t562 * 1.96200000000000010e1;
    let t564 = -t539;
    let t565 = t531 * 2.00000000000000000e0;
    let t566 = t564 + t565;
    let t567 = t551 * t552;
    let t568 = t566 + t567;
    let t569 = params[5];
    let t570 = t568 + t569;
    let t571 = -t563;
    let t572 = t570 + t571;
    let t573 = t560 * 1.96200000000000010e1;
    let t574 = params[2];
    let t575 = params[0];
    let t576 = -t574;
    let t577 = t575 + t576;
    let t578 = params[2];
    let t579 = params[0];
    let t580 = -t578;
    let t581 = t579 + t580;
    let t582 = params[2];
    let t583 = params[0];
    let t584 = -t582;
    let t585 = t583 + t584;
    let t586 = t585.sin();
    let t587 = t586.powf(2.00000000000000000e0);
    let t588 = t587 + 1.00000000000000000e0;
    let t589 = t588.powf(2.00000000000000000e0);
    let t590 = t572 + t573;
    let t591 = t577.sin();
    let t592 = t590 * t591;
    let t593 = 1.0 / t589;
    let t594 = t592 * t593;
    let t595 = t581.cos();
    let t596 = t594 * t595;
    let t597 = t522 * t523;
    let t598 = t596 * 2.00000000000000000e0;
    let t599 = t597 + t598;
    v[3][2] = t599;
    let t600 = params[3];
    let t601 = params[3];
    let t602 = t601.powf(2.00000000000000000e0);
    let t603 = t602 + 1.00000000000000004e-10;
    let t604 = t603.powf(1.50000000000000000e0);
    let t605 = 1.0 / t604;
    let t606 = t600.powf(4.00000000000000000e0);
    let t607 = params[3];
    let t608 = params[3];
    let t609 = t608.powf(2.00000000000000000e0);
    let t610 = t609 + 1.00000000000000004e-10;
    let t611 = t610.powf(5.00000000000000000e-1);
    let t612 = 1.0 / t611;
    let t613 = t607.powf(2.00000000000000000e0);
    let t614 = t612 * t613;
    let t615 = t614 * 3.00000000000000000e0;
    let t616 = params[2];
    let t617 = params[0];
    let t618 = -t616;
    let t619 = t617 + t618;
    let t620 = params[2];
    let t621 = params[0];
    let t622 = -t620;
    let t623 = t621 + t622;
    let t624 = params[3];
    let t625 = t619.sin();
    let t626 = t624 * t625;
    let t627 = t623.cos();
    let t628 = t626 * t627;
    let t629 = -t615;
    let t630 = t605 * t606;
    let t631 = t629 + t630;
    let t632 = t628 * 2.00000000000000000e0;
    let t633 = params[2];
    let t634 = params[0];
    let t635 = -t633;
    let t636 = t634 + t635;
    let t637 = t636.sin();
    let t638 = t637.powf(2.00000000000000000e0);
    let t639 = t638 + 1.00000000000000000e0;
    let t640 = t631 + t632;
    let t641 = 1.0 / t639;
    let t642 = t640 * t641;
    v[3][3] = t642;
    vec_to_dmat(&v)
}

pub fn eval_dfdu(params: &[f64]) -> DMatrix<f64> {
    let mut v: Vec<Vec<f64>> = vec![vec![0.0; 2]; 4];
    let t0 = 0.00000000000000000e0;
    v[0][0] = t0;
    let t1 = 0.00000000000000000e0;
    v[0][1] = t1;
    let t2 = params[2];
    let t3 = params[0];
    let t4 = -t2;
    let t5 = t3 + t4;
    let t6 = t5.sin();
    let t7 = t6.powf(2.00000000000000000e0);
    let t8 = t7 + 1.00000000000000000e0;
    let t9 = 1.0 / t8;
    v[1][0] = t9;
    let t10 = 0.00000000000000000e0;
    v[1][1] = t10;
    let t11 = 0.00000000000000000e0;
    v[2][0] = t11;
    let t12 = 0.00000000000000000e0;
    v[2][1] = t12;
    let t13 = 0.00000000000000000e0;
    v[3][0] = t13;
    let t14 = params[2];
    let t15 = params[0];
    let t16 = -t14;
    let t17 = t15 + t16;
    let t18 = t17.sin();
    let t19 = t18.powf(2.00000000000000000e0);
    let t20 = t19 + 1.00000000000000000e0;
    let t21 = 1.0 / t20;
    v[3][1] = t21;
    vec_to_dmat(&v)
}

